version: '3.8'

services:
  # Инициализация базы данных
  postgres:
    image: postgres:13
    container_name: my_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

  # Приложение с Streamlit
  streamlit_app:
    build: .
    container_name: streamlit_app
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MODEL_NAME=${MODEL_NAME}
    ports:
      - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"
    depends_on:
      - postgres
    command: streamlit run streamlit_app.py --server.port=${STREAMLIT_PORT}
    networks:
      - my_network

  # Инициализирующий сервис (например, создание таблиц в базе данных)
  init_db:
    image: postgres:13
    container_name: init_db
    command: |
      bash -c "until pg_isready -h postgres -U ${POSTGRES_USER}; do sleep 1; done;
               psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'CREATE TABLE IF NOT EXISTS logs (id SERIAL PRIMARY KEY, query TEXT, response TEXT, timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);'"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - postgres
    networks:
      - my_network
    restart: "no"

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
